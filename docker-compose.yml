services:
  api-server:
    container_name: 'api-server'
    build: 
      context: .
      dockerfile: ./backend/docker/Dockerfile.api
      args:
        - INSTALL_PyPartMC=false
    ports:
      - 8000:8000
    env_file:
      - ./backend/.env
    entrypoint: ["poetry", "run", "python", "interactive/manage.py"]
    command: ["runserver_plus", "0.0.0.0:8000"]
    volumes:
      - db-data:/music-box-interactive/interactive
      - partmc-data:/music-box-interactive/interactive/partmc-volume
  model-runner:
    build: 
      context: .
      dockerfile: ./backend/docker/Dockerfile.model_runner
      args:
        - INSTALL_PyPartMC=false
    env_file:
      - ./backend/.env
    depends_on:
      - rabbitmq
    restart: on-failure
    deploy:
      mode: replicated
      replicas: 6
    security_opt:
      - seccomp:unconfined
    volumes:
      - partmc-data:/partmc/partmc-volume
      - db-data:/music-box-interactive/interactive
  rabbitmq:
    container_name: 'rabbitmq'
    image: rabbitmq:3.11-management
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 15s
      retries: 1

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    working_dir: /MusicBoxInteractiveFrontend
    command: ["vite", "--host"]
volumes:
  db-data:
  partmc-data: