services:
  api-server:
    container_name: 'api-server'
    build: 
      context: .
      dockerfile: ./docker/Dockerfile.api
    ports:
      - 8000:8000
    env_file:
      - /home/shared/.env
    entrypoint: ["poetry", "run", "python", "interactive/manage.py"]
    command: ["runserver_plus", "--cert-file", "/certificates/acom.ucar.edu.crt", "--key-file", "/certificates/acom.ucar.edu.key", "0.0.0.0:8000"]
    volumes:
      - db-data:/music-box-interactive/interactive
      - /etc/pki/:/certificates
      # - partmc-data:/music-box-interactive/interactive/partmc-volume
    healthcheck:
      test: ["CMD", "curl", "-f", "--insecure", "https://localhost:8000/manage/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    network_mode: "host"
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "10m"    # Maximum size of each log file, e.g., 10 megabytes
        max-file: "5"      # Maximum number of log files to retain
  model-runner:
    build: 
      context: .
      dockerfile: ./docker/Dockerfile.model_runner
    env_file:
      - /home/shared/.env
    restart: on-failure
    deploy:
      mode: replicated
      replicas: 6
    command: ["poetry", "run", "python3", "/music-box-interactive/interactive/rabbit_mq_model_runner.py"]
    depends_on:
      api-server:
        condition: service_healthy
    volumes:
      # - partmc-data:/partmc/partmc-volume
      - db-data:/music-box-interactive/interactive
    logging:
      driver: "json-file"
      options:
        max-size: "10m"    # Maximum size of each log file, e.g., 10 megabytes
        max-file: "5"      # Maximum number of log files to retain
volumes:
  db-data:
  # partmc-data:
